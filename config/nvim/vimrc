set nocompatible

" Set a few core features
set autoread
set encoding=utf-8 termencoding=utf-8
set ruler cursorline
set number relativenumber
set tabpagemax=9999
set wrap whichwrap=b,s,h,l,[,]
set title
set winminheight=0
set backspace=indent,eol,start
set wildmenu wildmode=list:longest,full

" Search options
set hlsearch incsearch ignorecase smartcase

" Some indentation settings
set shiftwidth=4 tabstop=4 softtabstop=4 expandtab shiftround

" Open files with the cursor on the last saved position
if has("autocmd")
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" if working with a hardlink, save as new file
set backupcopy=auto,breakhardlink
set backupdir=$HOME/.config/nvim/backup
set backupskip=/tmp/*

" Always show tab and status lines
set laststatus=2
set showtabline=2
set showcmd

" Flush fs after writing
set fsync
set diffopt=internal,filler,algorithm:histogram,indent-heuristic,closeoff
au WinLeave * set nocursorline
au WinEnter * set cursorline
set clipboard=unnamedplus

" Show maximum text width
set colorcolumn=79
set linebreak
set breakindent
set virtualedit=onemore
set showbreak=++>
" set textwidth=80

" Split windows accordingly
set splitbelow
set splitright

set foldmethod=marker
set directory^=$HOME/.config/nvim/swapfiles/
set updatetime=2000
set updatecount=100
set listchars=tab:»·,trail:·,nbsp:· list

" History stuff
set history=10000
set undofile
set undodir^=$HOME/.config/nvim/undodir
set undolevels=20000

set noerrorbells
set showcmd
set showmode
set autoindent
set showmatch
set smarttab

" Keep cursor 3 lines away from the top/bottom of the window
set scrolloff=3
set sidescrolloff=5

set complete=.,w,b,u,t

" Spell checking
set spelllang=en,de
set nojoinspaces

" TODO make this dynamic
autocmd BufNewFile  *.vhd   0r $HOME/.config/nvim/skeleton/skeleton.vhd
autocmd BufNewFile  *.tex   0r $HOME/.config/nvim/skeleton/skeleton.tex
autocmd BufNewFile  *.py    0r $HOME/.config/nvim/skeleton/skeleton.py
autocmd BufNewFile  *.pl    0r $HOME/.config/nvim/skeleton/skeleton.pl
autocmd BufNewFile  *.html  0r $HOME/.config/nvim/skeleton/skeleton.html
autocmd BufNewFile  *.hpp   0r $HOME/.config/nvim/skeleton/skeleton.hpp
autocmd BufNewFile  *.h     0r $HOME/.config/nvim/skeleton/skeleton.h
autocmd BufNewFile  *.cpp   0r $HOME/.config/nvim/skeleton/skeleton.cpp
autocmd BufNewFile  *.cgi   0r $HOME/.config/nvim/skeleton/skeleton.cgi
autocmd BufNewFile  *.c     0r $HOME/.config/nvim/skeleton/skeleton.c

" Syntax stuff
" Enable syntax highlighting without overwriting colors
let g:tex_flavor = "latex"

syntax on
filetype plugin indent on

" autocmd FileType yaml setlocal tabstop=2 expandtab shiftwidth=2 softtabstop=2
" autocmd FileType typescriptreact setlocal ts=4 sw=4 et

autocmd BufNewFile,BufReadPost *.md set ft=markdown
"
" Remove trailing whitespace on saving
autocmd BufWritePre * %s/\s\+$//e

command E Explore
command Eh :normal osha256 = "0000000000000000000000000000000000000000000000000000";<ESC>2T"
nnoremap 00 di"64i0<ESC>

" If saving as w!!, vim will force-save the file with sudo
cnoremap w!! execute 'silent! write !sudo tee % >/dev/null' <bar> edit!

nnoremap WW :w<CR>

let maplocalleader="\\"

set pastetoggle=<F12> " Sane indentation on pastes with F12

" Window navigation
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Jump lines as displayed, not number wise
nnoremap j gj
nnoremap k gk

" Tab navigation like Firefox.
nnoremap <C-t> :tabnew<CR>
"TODO why is this not working with the ctrl key but the shift key??
nnoremap <C-TAB> :tabnext<CR>
nnoremap <S-tab> :tabnext<CR>

nnoremap <C-o> :vnew +Explore<CR>

" Internal file explorer
let g:netrw_mousemaps = 0 " No mouse
let g:netrw_banner = 0 " No banner

" Lightline config
let g:lightline = { 'active': {} }
let g:lightline.colorscheme = 'wombat'

let g:lightline.active.left = [ [ 'mode', 'paste' ], [ 'gitbranch', 'filename', 'readonly', 'modified' ] ]
let g:lightline.active.right = [ [ 'lineinfo' ], [ 'percent' ], [ 'fileformat', 'fileencoding', 'filetype' ] ]

let g:lightline.tabline = { 'left': [ ['tabs'] ], 'right': [ ['gettime'] ] }

let g:lightline.component =  { 'gettime': '%{strftime("%H:%M:%S")}' }
let g:lightline.component_function = { 'gitbranch': 'fugitive#head' }

let g:lightline.separator = { 'left': '', 'right': '' }
let g:lightline.subseparator = { 'left': '', 'right': '' }

"" Vim Plug
" Download vim-plug if not installed
if empty(glob('$HOME/.config/nvim/autoload/plug.vim'))
  silent !curl -fLo $HOME/.config/nvim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('$HOME/.config/nvim/plugged')
    " Lightline for a neat status and tabline
    Plug 'itchyny/lightline.vim'

    Plug 'tpope/vim-speeddating'

    Plug 'Yggdroot/indentLine'

    Plug 'othree/html5.vim'

    " Command line fuzzy finder
    Plug 'junegunn/fzf', { 'dir': '$HOME/.fzf', 'do': './install --all' }
    Plug 'junegunn/fzf.vim'

    " markdown
    Plug 'dhruvasagar/vim-table-mode', { 'for': 'markdown'}
    Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }

    " Essential git plugins
    Plug 'tpope/vim-fugitive'

    Plug 'neovim/nvim-lspconfig'

    Plug 'hrsh7th/nvim-cmp'
    Plug 'hrsh7th/cmp-buffer'
    Plug 'hrsh7th/cmp-path'
    Plug 'hrsh7th/cmp-nvim-lsp'

    Plug 'nvim-lua/plenary.nvim'
    Plug 'lewis6991/gitsigns.nvim'

    Plug 'nvim-lua/lsp_extensions.nvim'
    Plug 'kosayoda/nvim-lightbulb'

    Plug 'norcalli/nvim-colorizer.lua'

    Plug 'gisphm/vim-gitignore'

    Plug 'jose-elias-alvarez/null-ls.nvim'

    Plug 'nvim-lua/plenary.nvim'

    Plug 'nvim-treesitter/nvim-treesitter', { 'do': ':TSUpdate' }
    Plug 'nvim-treesitter/nvim-treesitter-refactor'
    Plug 'nvim-treesitter/nvim-treesitter-textobjects'
    Plug 'nvim-treesitter/playground'

    Plug 'LnL7/vim-nix', { 'for': 'nix' }

    " Colorschemes
    Plug 'sainnhe/sonokai'

    " Toggle comments with ctrl+/
    Plug 'tomtom/tcomment_vim'

    Plug 'francoiscabrol/ranger.vim'

    Plug 'https://github.com/adelarsq/vim-matchit'

    Plug 'mhinz/vim-startify'

    Plug 'voldikss/vim-translator', { 'for': 'latex' }

call plug#end()

nmap <silent> <Leader>tr <Plug>TranslateR
nmap <silent> <Leader>tw <Plug>TranslateW

" Disable Q
noremap Q <CR>

" grep in open files
map <F4> :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>

nmap <F3> :!./vimrun<CR>

" Set this before setting the colorscheme
set background=dark

set termguicolors
colorscheme sonokai

source $HOME/.dotfiles/excluded/vim
